'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18063
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18063.
'
Namespace oPickup
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="PickupBinding", [Namespace]:="urn:pickup"),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(PickupData)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(BoxData))>  _
    Partial Public Class Pickup
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetBoxbyStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPickupbyBcdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBoxCompanyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ChangeStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.imagingXperts_eDocCloud_UpDown.My.MySettings.Default.imagingXperts_eDocCloud_UpDown_oPickup_Pickup
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetBoxbyStatusCompleted As GetBoxbyStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPickupbyBcdCompleted As GetPickupbyBcdCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBoxCompanyCompleted As GetBoxCompanyCompletedEventHandler
        
        '''<remarks/>
        Public Event ChangeStatusCompleted As ChangeStatusCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:pickupwsdl#GetBoxbyStatus", RequestNamespace:="urn:pickupwsdl", ResponseNamespace:="urn:pickupwsdl")>  _
        Public Function GetBoxbyStatus(ByVal strStatus As String, ByVal token As String) As <System.Xml.Serialization.SoapElementAttribute("return")> BoxData()
            Dim results() As Object = Me.Invoke("GetBoxbyStatus", New Object() {strStatus, token})
            Return CType(results(0),BoxData())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBoxbyStatusAsync(ByVal strStatus As String, ByVal token As String)
            Me.GetBoxbyStatusAsync(strStatus, token, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBoxbyStatusAsync(ByVal strStatus As String, ByVal token As String, ByVal userState As Object)
            If (Me.GetBoxbyStatusOperationCompleted Is Nothing) Then
                Me.GetBoxbyStatusOperationCompleted = AddressOf Me.OnGetBoxbyStatusOperationCompleted
            End If
            Me.InvokeAsync("GetBoxbyStatus", New Object() {strStatus, token}, Me.GetBoxbyStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBoxbyStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBoxbyStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBoxbyStatusCompleted(Me, New GetBoxbyStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:pickupwsdl#GetPickupbyBcd", RequestNamespace:="urn:pickupwsdl", ResponseNamespace:="urn:pickupwsdl")>  _
        Public Function GetPickupbyBcd(ByVal strBarcode As String, ByVal token As String) As <System.Xml.Serialization.SoapElementAttribute("return")> PickupData()
            Dim results() As Object = Me.Invoke("GetPickupbyBcd", New Object() {strBarcode, token})
            Return CType(results(0),PickupData())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPickupbyBcdAsync(ByVal strBarcode As String, ByVal token As String)
            Me.GetPickupbyBcdAsync(strBarcode, token, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPickupbyBcdAsync(ByVal strBarcode As String, ByVal token As String, ByVal userState As Object)
            If (Me.GetPickupbyBcdOperationCompleted Is Nothing) Then
                Me.GetPickupbyBcdOperationCompleted = AddressOf Me.OnGetPickupbyBcdOperationCompleted
            End If
            Me.InvokeAsync("GetPickupbyBcd", New Object() {strBarcode, token}, Me.GetPickupbyBcdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPickupbyBcdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPickupbyBcdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPickupbyBcdCompleted(Me, New GetPickupbyBcdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:pickupwsdl#GetBoxCompany", RequestNamespace:="urn:pickupwsdl", ResponseNamespace:="urn:pickupwsdl")>  _
        Public Function GetBoxCompany(ByVal strBox As String, ByVal token As String) As <System.Xml.Serialization.SoapElementAttribute("return")> String
            Dim results() As Object = Me.Invoke("GetBoxCompany", New Object() {strBox, token})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBoxCompanyAsync(ByVal strBox As String, ByVal token As String)
            Me.GetBoxCompanyAsync(strBox, token, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBoxCompanyAsync(ByVal strBox As String, ByVal token As String, ByVal userState As Object)
            If (Me.GetBoxCompanyOperationCompleted Is Nothing) Then
                Me.GetBoxCompanyOperationCompleted = AddressOf Me.OnGetBoxCompanyOperationCompleted
            End If
            Me.InvokeAsync("GetBoxCompany", New Object() {strBox, token}, Me.GetBoxCompanyOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBoxCompanyOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBoxCompanyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBoxCompanyCompleted(Me, New GetBoxCompanyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:pickupwsdl#ChangeStatus", RequestNamespace:="urn:pickupwsdl", ResponseNamespace:="urn:pickupwsdl")>  _
        Public Function ChangeStatus(ByVal strBox As String, ByVal strStatus As String, ByVal userid As String, ByVal token As String) As <System.Xml.Serialization.SoapElementAttribute("return")> String
            Dim results() As Object = Me.Invoke("ChangeStatus", New Object() {strBox, strStatus, userid, token})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ChangeStatusAsync(ByVal strBox As String, ByVal strStatus As String, ByVal userid As String, ByVal token As String)
            Me.ChangeStatusAsync(strBox, strStatus, userid, token, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ChangeStatusAsync(ByVal strBox As String, ByVal strStatus As String, ByVal userid As String, ByVal token As String, ByVal userState As Object)
            If (Me.ChangeStatusOperationCompleted Is Nothing) Then
                Me.ChangeStatusOperationCompleted = AddressOf Me.OnChangeStatusOperationCompleted
            End If
            Me.InvokeAsync("ChangeStatus", New Object() {strBox, strStatus, userid, token}, Me.ChangeStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnChangeStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.ChangeStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ChangeStatusCompleted(Me, New ChangeStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:pickup")>  _
    Partial Public Class BoxData
        
        Private row_idField As String
        
        Private wf_idField As String
        
        Private fk_statusField As String
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property row_id() As String
            Get
                Return Me.row_idField
            End Get
            Set
                Me.row_idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property wf_id() As String
            Get
                Return Me.wf_idField
            End Get
            Set
                Me.wf_idField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property fk_status() As String
            Get
                Return Me.fk_statusField
            End Get
            Set
                Me.fk_statusField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:pickup")>  _
    Partial Public Class PickupData
        
        Private row_idField As String
        
        Private fk_userField As String
        
        Private fk_companyField As String
        
        Private fk_orderField As String
        
        Private fk_barcodeField As String
        
        Private qtyField As String
        
        Private fk_boxField As String
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property row_id() As String
            Get
                Return Me.row_idField
            End Get
            Set
                Me.row_idField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property fk_user() As String
            Get
                Return Me.fk_userField
            End Get
            Set
                Me.fk_userField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property fk_company() As String
            Get
                Return Me.fk_companyField
            End Get
            Set
                Me.fk_companyField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property fk_order() As String
            Get
                Return Me.fk_orderField
            End Get
            Set
                Me.fk_orderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property fk_barcode() As String
            Get
                Return Me.fk_barcodeField
            End Get
            Set
                Me.fk_barcodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property qty() As String
            Get
                Return Me.qtyField
            End Get
            Set
                Me.qtyField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property fk_box() As String
            Get
                Return Me.fk_boxField
            End Get
            Set
                Me.fk_boxField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetBoxbyStatusCompletedEventHandler(ByVal sender As Object, ByVal e As GetBoxbyStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBoxbyStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As BoxData()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),BoxData())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetPickupbyBcdCompletedEventHandler(ByVal sender As Object, ByVal e As GetPickupbyBcdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPickupbyBcdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As PickupData()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),PickupData())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetBoxCompanyCompletedEventHandler(ByVal sender As Object, ByVal e As GetBoxCompanyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBoxCompanyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub ChangeStatusCompletedEventHandler(ByVal sender As Object, ByVal e As ChangeStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ChangeStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
